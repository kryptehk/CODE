#include <SoftwareSerial.h>
#include <DFRobotDFPlayerMini.h>

// Define RX and TX pins for communication
SoftwareSerial mySerial(2, 3); // TX, RX
DFRobotDFPlayerMini myDFPlayer;

const int sensor1 = A1;
const int sensor2 = A2;
const int sensor3 = A3;

// Variables to track stability for Audio 1
unsigned long audio1StartTime = 0;
bool audio1Stable = false;

// Variables to track stability for Audio 2
unsigned long audio2StartTime = 0;
bool audio2Stable = false;

void setup() {
    Serial.begin(9600);
    mySerial.begin(9600);
    
    if (!myDFPlayer.begin(mySerial)) {
        Serial.println("DFPlayer Mini not detected!");
        while (true); // Stop execution if DFPlayer Mini is not found
    }
    
    Serial.println("DFPlayer Mini Ready!");
    myDFPlayer.volume(30); // Set volume (0 to 30)
}

void loop() {
    int value1 = analogRead(sensor1);
    int value2 = analogRead(sensor2);
    int value3 = analogRead(sensor3);
    
    Serial.print("Sensor 1: ");
    Serial.print(value1);
    Serial.print("\tSensor 2: ");
    Serial.print(value2);
    Serial.print("\tSensor 3: ");
    Serial.println(value3);

    // Condition for Audio 1 with 2-second stability check
    if (value1 <= 189  && value2 >= 225 && value3 >= 255) {
        if (!audio1Stable) { 
            audio1StartTime = millis(); // Start timing
            audio1Stable = true;
        }

        // Check if the condition remains stable for 2 seconds
        if (millis() - audio1StartTime >= 1000) {
            Serial.print("Playing Audio 1 - Stable for 1 seconds: ");
            Serial.print(value1); Serial.print(", "); Serial.print(value2); Serial.print(", "); Serial.println(value3);
            myDFPlayer.play(1);
            delay(1000);
            audio1Stable = false; // Reset stability check after playing
        }
    } else {
        audio1Stable = false; // Reset if condition changes
    }

    // Condition for Audio 2 with 1-second stability check
    if (value1 <= 189 && value2 <= 218 && value3 >= 255) {
        if (!audio2Stable) { 
            audio2StartTime = millis(); // Start timing
            audio2Stable = true;
        }

        // Check if the condition remains stable for 1 second
        if (millis() - audio2StartTime >= 200) {
            Serial.print("Playing Audio 2 - Stable for .5 second: ");
            Serial.print(value1); Serial.print(", "); Serial.print(value2); Serial.print(", "); Serial.println(value3);
            myDFPlayer.play(2);
            delay(2000);
            audio2Stable = false; // Reset stability check after playing
        }
    } else {
        audio2Stable = false; // Reset if condition changes
    }

    // Other audio conditions (unchanged)
    if (value1 <= 189 && value2 <= 218 && value3 <= 249) {
        Serial.print("Playing Audio 3 - Sensor Values: ");
        Serial.print(value1); Serial.print(", "); Serial.print(value2); Serial.print(", "); Serial.println(value3);
        myDFPlayer.play(3);
        delay(1000);
    } else if (value1 >= 196 && value2 <= 218 && value3 >= 249) {
        Serial.print("Playing Audio 4 - Sensor Values: ");
        Serial.print(value1); Serial.print(", "); Serial.print(value2); Serial.print(", "); Serial.println(value3);
        myDFPlayer.play(4);
        delay(1000);
    } else if (value1 >= 189 && value2 <= 218 && value3 <= 249) {
        Serial.print("Playing Audio 5 - Sensor Values: ");
        Serial.print(value1); Serial.print(", "); Serial.print(value2); Serial.print(", "); Serial.println(value3);
        myDFPlayer.play(5);
        delay(1000);
    } else if (value1 >= 196 && value2 >= 225 && value3 <= 249) {
        Serial.print("Playing Audio 6 - Sensor Values: ");
        Serial.print(value1); Serial.print(", "); Serial.print(value2); Serial.print(", "); Serial.println(value3);
        myDFPlayer.play(6);
        delay(1000);
    } else if (value1 <= 189 && value2 >= 225 && value3 <= 255 ) {
        Serial.print("Playing Audio 7 - Sensor Values: ");
        Serial.print(value1); Serial.print(", "); Serial.print(value2); Serial.print(", "); Serial.println(value3);
        myDFPlayer.play(7);
        delay(5000);
    }
    
    delay(1000); // Small delay to prevent excessive serial output
}